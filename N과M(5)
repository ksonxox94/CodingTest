#include<iostream>
using namespace std;
void func(int arr[],int num[], int m, int n, int s, int c)
{
	arr[c] = s; //arr배열의 0~(m-1)인덱스에 입력받은 수가 중복없이 들어가게 됨
	c++; //배열의 c인덱스에 값이 들어가면 c를 1증가해서 다음 인덱스에 값을 넣게 함
	if (c<m ) //길이가 m이면 인덱스 c는 0부터 시작하므로 m보다  작을때만 값을 넣을 수 있는 유효한 자리
	{
		for (int i = 0; i < n; ++i)
		{
			int chk = 0;
			for (int j = 0; j < c; ++j)
			{
				if (arr[j] == num[i]) //값이 들어가있는 이전 arr 인덱스의 값을 순차적으로 탐색해서 중복값 체크
				{
					chk = 1; //중복값 있으면 break시키고 chk를 1로 바꿈
					break;
				}
			}
			if (chk == 0)//중복값 없을때만 num[i]를 다음 arr 인덱스 자리에 넣음
			{
				func(arr, num, m, n, num[i], c);
			}
		}
	}
	else //탈출조건..m길이만큼 arr의 값이 채워졌을 때 중복값이 없는 입력받은 수들의 배열을 출력
	{
		for(int i=0;i<m;++i)
		{ 
			cout << arr[i] << " ";
		}
		cout << "\n";
	}
}
void sorting(int *num,int n)
{
	for (int i = 0; i < n; ++i)
	{
		for (int j = i + 1; j < n; ++j)
		{
			if (num[j] < num[i])
			{
				int temp = num[i];
				num[i] = num[j];
				num[j] = temp;
			}
		}
	}
}
int main()
{
	int m, n, arr[8], num[8];
	cin >> n >> m;
	for (int i = 0; i < n; ++i)
	{
		cin >> num[i];
	}
	sorting(num,n); //받은 숫자 배열을 오름차순으로 정렬(선택정렬)
	for (int i = 0; i < n; ++i)
	{
		func(arr, num, m, n, num[i], 0);//받은 숫자들을 오름차순으로 가능한 수열 조합 출력(중복값 없는 수열 조합)
	}
}
